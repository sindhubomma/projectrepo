pipeline {
    agent any
    
    environment {
        // GitHub repository URL
        REPO_URL = 'https://github.com/rajput-ashish/devops-project.git'
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Clean workspace before checkout
                //cleanWs()
                // Checkout code from GitHub
                git branch: 'main', url: env.REPO_URL
            }
        }
        
        //stage('Install Dependencies') {
            //steps {
                // Install any necessary dependencies
              //  sh 'npm install'
            //}
        //}
        
        stage('Code Quality') {
            steps {
                script {
                    // Run ESLint for JavaScript files
                    sh 'npx eslint "*/.js" || true'
                    
                    // Run HTML validator
                    sh 'npx html-validator "*/.html" || true'
                    
                    // Run CSS validator
                    sh 'npx stylelint "*/.css" || true'
                }
            }
        }
        
        stage('Build') {
            steps {
                // Run build command if using a build tool
                sh 'npm run build || true'
            }
        }
        
        stage('Test') {
            steps {
                // Run tests if available
                sh 'npm test || true'
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    // Deploy to web server
                    // This is a simple example - adjust according to your deployment needs
                    sh '''
                        echo "Deploying to web server..."
                        # Add your deployment commands here
                        # For example: copying files to web server directory
                        # cp -r dist/* /var/www/html/
                    '''
                }
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed! Please check the logs for details.'
        }
        //always {
            // Clean workspace after build
           // cleanWs()
       // }
    }
}
